" vim: fdm=marker foldlevel=0

set nocompatible

" {{{ Plugins
call plug#begin('~/.vim/plugins')
Plug 'airblade/vim-gitgutter'
Plug 'chrisbra/vim-diff-enhanced'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'easymotion/vim-easymotion'
Plug 'haya14busa/incsearch.vim'
Plug 'mbbill/undotree'
Plug 'mhinz/vim-grepper'
Plug 'mhinz/vim-startify'
Plug 'morhetz/gruvbox'
Plug 'neomake/neomake'
Plug 'osyo-manga/vim-over'
Plug 'rhysd/vim-clang-format'
Plug 'romainl/vim-qf'
Plug 'rust-lang/rust.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'sheerun/vim-polyglot'
Plug 'SirVer/ultisnips'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'Valloric/YouCompleteMe'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vimwiki/vimwiki'
call plug#end()
" }}}

" {{{ General settings
if has("autocmd")
	filetype plugin indent on
else
	set autoindent
endif

set autoread
set breakindent
set directory=~/.vim/swapfiles//
set expandtab
set fileformats=unix,dos,mac
set foldlevel=99
set foldmethod=syntax
set foldopen+=jump
set formatoptions+=j
set grepformat=%f:%l:%c:%m
set grepprg=rg\ --vimgrep\ $*
set history=1000
set hlsearch
set ignorecase
set imactivatekey=C-N
set incsearch
set laststatus=2
set linebreak
set mouse=a
set nobackup
set nowritebackup
set number
set scrolloff=12
set shiftwidth=4
set showbreak=...\ \ 
set smartcase
set smarttab
set spelllang=en
set splitbelow
set splitright
set tabstop=8
set termguicolors
set textwidth=100
set timeoutlen=1000
set title
set ttimeoutlen=10
set wildmode=longest,list
" }}}

" {{{ GUI
if has("gui_running")
    set guifont=Source\ Code\ Pro\ 10
    set guioptions-=e
    set guioptions-=L
    set guioptions-=m
    set guioptions-=r
    set guioptions-=T
endif
" }}}

" {{{ Colorscheme
let g:gruvbox_termcolors=16
set background=dark
let g:gruvbox_italic = 1
let g:gruvbox_bold = 0
let g:gruvbox_contrast_dark = "soft"
let g:gruvbox_invert_selection = 0
colorscheme gruvbox
"colorscheme wombat256
" }}}

" {{{ Plugin settings

" {{{ 'bling/vim-airline'
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
" }}}

" {{{ 'ctrlpvim/ctrlp.vim'
let g:ctrlp_user_command = {
    \ 'types': {
    \ 1: ['.git', 'cd %s && git ls-files -co --exclude-standard'],
    \ },
    \ 'fallback': 'find %s -type f'
    \ }
" }}}

" {{{ 'mhinz/vim-grepper'
let g:grepper = { }
let g:grepper.tools = ['rg', 'ag', 'git', 'grep']
" }}}

" {{{ 'scrooloose/nerdcommenter'
let g:NERDCreateDefaultMappings = 0
let g:NERDSpaceDelims = 1
let g:NERDDefaultAlign = 'left'
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1
" }}}

" {{{ 'scrooloose/nerdtree'
let NERDTreeChDirMode = 2
" }}}

" {{{ 'Valloric/YouCompleteMe'
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_filetype_blacklist = {
            \ 'tagbar' : 1,
            \ 'qf' : 1,
            \ 'notes' : 1,
            \ 'markdown' : 1,
            \ 'unite' : 1,
            \ 'text' : 1,
            \ 'pandoc' : 1,
            \ 'infolog' : 1,
            \ 'mail' : 1
            \ }
let g:ycm_key_list_select_completion = ['<TAB>', '<Down>', '<C-j>']
let g:ycm_key_list_previous_completion = ['<S-TAB>', '<Up>', '<C-k>']
" }}}

" {{{ Keybindings
" }}}

" {{{ Redundant spaces
highlight RedundantSpaces term=standout ctermbg=red guibg=red
match RedundantSpaces /\s\+$\| \+\ze\t/ "\ze sets end of match so only spaces highlighted
" }}}

" {{{ Code width
set bs=2
set ts=8
set sts=8
set sw=8
set tw=78
set noexpandtab
" }}}
